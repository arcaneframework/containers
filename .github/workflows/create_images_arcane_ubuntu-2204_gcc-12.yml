name: '[ARC_U22:G12] Image Creator'

on:
  # A executer que lorsque l'on demande.
  workflow_dispatch:
    inputs:
      os_base:
        description: 'OS base'
        required: true
        default: 'ubuntu-2204'
        type: choice
        options:
        - 'ubuntu-2204'
        - 'ubuntu-2004'

      compiler:
        description: 'Compiler'
        required: true
        default: 'gcc-12'
        type: choice
        options:
        - 'gcc'
        - 'gcc-12'
        - 'gcc-11'
        - 'clang'
        - 'clang-15'
        - 'clang-14'
        - 'clang-13'
        - 'cuda'
        - 'cuda-116'
        - 'cuda-117'
        - 'cuda-118'

      dependencies:
        description: 'Dependencies'
        required: true
        default: 'full'
        type: choice
        options:
        - 'full'
        - 'minimal'
        - 'doc'

      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - 'release'
        - 'debug'
        - 'check'


env:
  REGISTRY: 'ghcr.io'
  USER_NAME: 'arcaneframework'

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate Dockerfile
        shell: 'bash'
        run: |
          ./.github/scripts/DockerfileGenerator.sh \
          --os ${{ inputs.os_base }} \
          --compiler ${{ inputs.compiler }} \
          --image_version ${{ inputs.dependencies }} \
          --build_type ${{ inputs.build_type }} \
          --dockerfile_in ./.github/scripts/Dockerfile.in \
          --dockerfile_out ./Dockerfile

      - name: Upload Dockerfile generated
        uses: actions/upload-artifact@v3
        with:
          name: dockerfile-artifact
          path: ./Dockerfile
          retention-days: 3

      # - name: Log in to the Container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.USER_NAME }}/arcane_${{ inputs.os_base }}
      #     labels: |
      #       org.opencontainers.image.title=ArcaneFramework
      #       org.opencontainers.image.description=Arcane Framework Image
      #       org.opencontainers.image.vendor=CEA
      #     tags: |
      #       type=raw, ${{ inputs.compiler }}_${{ inputs.dependencies }}_${{ inputs.type_build }}_latest
      #       type=raw, ${{ inputs.compiler }}_${{ inputs.dependencies }}_${{ inputs.type_build }}_{{date 'YYYYMMDD'}}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     file: ${{ env.DOCKERFILE_PATH }}/${{ inputs.os_base }}/${{ inputs.compiler }}/${{ inputs.dependencies }}/${{ inputs.type_build }}/Dockerfile
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
